(require '[clojure.java.io :as io])
(with-open [rdr (io/reader "/Users/brad/.bashrc")]
    (doall (line-seq rdr)))
(with-open [rdr (io/reader "/Users/patrick/.bashrc")]
    (doall (line-seq rdr)))
(with-open [rdr (io/reader "/home/patrick/dev/proj/joyceproject_archive/chap/proteus.php")]
    (doall (line-seq rdr)))
(slurp "/home/patrick/dev/proj/joyceproject_archive/chap/proteus.php")
(load "chapter")
exit
(require 'net.grand.enlive-html)
(require 'net.cgrand.enlive-html)
(load "chapter")
(in-ns 'chapter)
proteus
(html/html-resource proteus)
(html/resource proteus)
(html/html-resource "/home/patrick/dev/proj/joyceproject_archive/chap/proteus.php")
(html/html-resource "/home/patrick/dev/edu/practice/enlive-tutorial/src/tutorial/3col.html")
(html/html-resource "3col.html")
(doc)
(source html/html-resource)
(use 'clojure.repl)
(source html/html-resource)
(doc html/get-resource)
(source html/get-resource)
(html/html-resource (slurp "3col.html"))
(html/html-resource (slurp "/home/patrick/dev/edu/practice/enlive-tutorial/src/tutorial/3col.html"))
(html/html-resource "<div></div>")
(as-file "3col.html")
(use 'clojure.java.io)
(as-file "3col.html")
(html/html-resource (as-file "3col.html"))
(html/html-resource (as-file "/home/patrick/dev/edu/practice/enlive-tutorial/src/tutorial/3col.html"))
(html/html-resource (as-file "/home/patrick/dev/proj/joyceproject_archive/chap/proteus.php"))
(load "chapter")
(pprint proteus-node)
(use clojure.pprint)
(use 'clojure.pprint)
(pprint proteus-node)
(html/*emit proteus-node)
(html/emit* proteus-node)
(apply str (html/emit* proteus-node))
(at proteus-node [:p.newchapter] (remove-attr "class"))
(html/at proteus-node [:p.newchapter] (html/remove-attr "class"))
(source remove-attr)
(doc remove-attr)
(doc html/remove-attr)
(source html/remove-attr)
(html/at proteus-node [:p] (html/remove-attr ["class"]))
(sniptest "<html><body><p class="bleh">hi</p></body></html" [:p] (remove-attr "class"))
(html/sniptest "<html><body><p class="bleh">hi</p></body></html" [:p] (remove-attr "class"))
(html/sniptest "<html><body><p class=\"bleh\">hi</p></body></html" [:p] (remove-attr "class"))
(html/sniptest "<html><body><p class=\"bleh\">hi</p></body></html" [:p] (html/remove-attr "class"))
(html/sniptest "<html><body><p class=\"bleh\">hi</p></body></html" [:p] (html/set-attr "beef" "juice"))
(html/sniptest "<html><body><p class=\"bleh\">hi</p></body></html" [:p] (html/set-attr "class" "juice"))
(html/sniptest "<html><body><p class=\"bleh\">hi</p></body></html" [:p] (html/set-attr "uh" "juice"))
(html/sniptest "<html><body><p class=\"bleh\">hi</p></body></html" [:p] (html/remove-class "bleh"))
(html/sniptest "<html><body><p class=\"bleh\">hi</p></body></html" [:p] (html/remove-class "blah"))
(html/at proteus-node [:p] (html/remove-class "newchapter"))
(defn drop-newchapter [nodes] (transform nodes [:p] (html/remove-class "newchapter")))
(defn drop-newchapter [nodes] (html/transform nodes [:p] (html/remove-class "newchapter")))
drop-newchapter proteus-node
(source html/transform)
(source html/transform-node)
(load "chapter")
(render (rewrite-chapter proteus-node))
(render proteus-node)
(load "chapter")
(render proteus-node)
(load "chapter")
(render proteus-node)
(render (rewrite-chapter proteus-node))
(load "chapter")
(render (rewrite-chapter proteus-node))
(rewrite-chapter proteus-node)
(load "chapter")
(render (rewrite-chapter proteus-node))
(rewrite-chapter proteus-node)
(load "chapter")
(render (rewrite-chapter proteus-node))
(source en/append)
proteus-node
(load "chapter")
(render (rewrite-chapter proteus-node))
(load "chapter")
(render (rewrite-chapter proteus-node))
(load "chapter")
(render (rewrite-chapter proteus-node))
(load "chapter")
(render (rewrite-chapter proteus-node))
(load "chapter")
(render (rewrite-chapter proteus-node))
